// Copyright (—Å) 2013 Gushcha Anton <ncrashed@gmail.com>
/*
* This file is part of Borey Engine.
*
* Boost Software License - Version 1.0 - August 17th, 2003
* 
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (the "Software") to use, reproduce, display, distribute,
* execute, and transmit the Software, and to prepare derivative works of the
* Software, and to permit third-parties to whom the Software is furnished to
* do so, all subject to the following:
* 
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/
// This file is written in D programming language
/**
*   Util module to initialize engine shared library.
*/
module borey.main;

import borey.core;
import borey.simplecore;

import core.runtime; 
import core.memory;
import std.c.stdlib; 
import std.string; 

version(BOREY_DYNAMIC_LOADING)
{
    extern (C) 
    { 
        void* gc_getProxy();
    } 

    version(Windows)
    {
        import std.c.windows.windows; 

        HINSTANCE g_hInst; 
        size_t counter;

        extern (Windows) BOOL DllMain(HINSTANCE hInstance, ULONG ulReason, LPVOID pvReserved) 
        { 
            switch (ulReason) 
            { 
                case DLL_PROCESS_ATTACH: 
                {
                    if(counter == 0)
                        Runtime.initialize(); 
                    counter += 1;
                    break; 
                }
                case DLL_PROCESS_DETACH: 
                {
                    if(counter == 0)
                        Runtime.terminate();
                    else
                        counter -= 1; 
                    break; 
                }
                case DLL_THREAD_ATTACH: 
                    return false; 
                case DLL_THREAD_DETACH:
                    return false; 
            } 

            g_hInst = hInstance; 
            return true; 
        } 
    } 
}

extern(C)
{
    /**
    *   Setups gc proxy, should be called when loading library.
    */
    export void* boreyEngineInitialize() 
    { 
        version(BOREY_DYNAMIC_LOADING)
            return gc_getProxy(); 
        else
            return null;
    } 

    /**
    *   Terminates library, cleares gc proxy. Should be called when
    *   unloading library.
    */
    export void boreyEngineTerminate() 
    { 
    }

    /**
    *   Creates borey core and sends it to the application.
    */
    export IBoreyCore createBoreyCore()
    {
        return new SimpleBoreyCore();
    }
}

version(unittest)
{
    void main() {}
}