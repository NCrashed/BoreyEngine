// Copyright (—Å) 2013 Gushcha Anton <ncrashed@gmail.com>
/*
* This file is part of Borey Engine.
*
* Boost Software License - Version 1.0 - August 17th, 2003
* 
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (the "Software") to use, reproduce, display, distribute,
* execute, and transmit the Software, and to prepare derivative works of the
* Software, and to permit third-parties to whom the Software is furnished to
* do so, all subject to the following:
* 
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/
// This file is written in D programming language
module borey.video.opengldriver;
@safe:

import borey.log;
import borey.exception;
import borey.video.driver;
import borey.scene.manager;
import derelict.opengl3.gl3;
import derelict.util.exception;
import std.conv;

/**
*   Video driver based on opengl 3 and greater.
*/
class OpenGlDriver : IVideoDriver
{
    this(shared ILogger logger) @trusted
    {
        mLogger = logger;

        try
        {
            DerelictGL3.load();
        }
        catch(DerelictException e)
        {
            throw new BoreyLoggedException(mLogger, text("Failed to load OpenGlDriver: failed to load OpenGL. Details: ", e.msg));
        }
    }

    /**
    *   Returns information about incapsulated graphical API.
    *   For instance: 'OpenGL 3.2' or 'DirectX 11'.
    */
    string description() const @property @trusted
    {
        return "OpenGL "~to!string(mLoadedVersion);
    }

    /**
    *   Load context and underlying drawing services.
    *   Should be called after first window contex is created.
    */
    void initialize() @trusted
    {
        try
        {
            mLoadedVersion = DerelictGL3.reload();
        }
        catch(DerelictException e)
        {
            throw new BoreyLoggedException(mLogger, text("Failed to initialize OpenGL contex. Details: ", e.msg));
        }

        if(mLoadedVersion < GLVersion.GL33)
            throw new BoreyLoggedException(mLogger, text("OpenGL version too low. Minimum required: ", mLoadedVersion));

        mLogger.logNotice(text("[OpenGlDriver]: OpenGL driver loaded, version: ", mLoadedVersion));
    }

    /**
    *   Performs scene drawing including view frustum culling,
    *   applying different materials and model cashing.
    */
    void draw(shared ISceneManager manager)
    {

    }

    private
    {
        shared ILogger mLogger;
        GLVersion mLoadedVersion;
    }
}