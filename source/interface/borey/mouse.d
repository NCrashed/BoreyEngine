// Copyright (—Å) 2013 Gushcha Anton <ncrashed@gmail.com>
/*
* This file is part of Borey Engine.
*
* Boost Software License - Version 1.0 - August 17th, 2003
* 
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (the "Software") to use, reproduce, display, distribute,
* execute, and transmit the Software, and to prepare derivative works of the
* Software, and to permit third-parties to whom the Software is furnished to
* do so, all subject to the following:
* 
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/
// This file is written in D programming language
/**
*   Module describes mouse buttons and button states.
*/
module borey.mouse;
@safe:

import std.bitmanip;

/// Describes mouse buttons
enum MouseButton
{
    BUTTON_1 = 0,
    BUTTON_2 = 1,
    BUTTON_3 = 2,
    BUTTON_4 = 3,
    BUTTON_5 = 4,
    BUTTON_6 = 5,
    BUTTON_7 = 6,
    BUTTON_8 = 7,
    LEFT  = BUTTON_1,
    RIGHT = BUTTON_2,
    MIDDLE = BUTTON_3
}

/// Describes mouse button position: pressed or relased.
enum MouseButtonPosition
{
    PRESS,
    RELEASE
}

/**
*   Describes mouse button state to pass into input callbacks.
*/
struct MouseButtonState
{
    /// Mouse button pressed/released
    MouseButton button;
    /// Pressed/released
    MouseButtonPosition position;

    /// Modifier key flags 
    mixin(bitfields!( 
        bool, "shift",   1, 
        bool, "control", 1, 
        bool, "alt",     1, 
        bool, "_super",  1,
        uint, "",        4));    
}