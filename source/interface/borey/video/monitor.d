// Copyright (—Å) 2013 Gushcha Anton <ncrashed@gmail.com>
/*
* This file is part of Borey Engine.
*
* Boost Software License - Version 1.0 - August 17th, 2003
* 
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (the "Software") to use, reproduce, display, distribute,
* execute, and transmit the Software, and to prepare derivative works of the
* Software, and to permit third-parties to whom the Software is furnished to
* do so, all subject to the following:
* 
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/
// This file is written in D programming language
/**
*   Module provides interface to native monitors.
*/
module borey.video.monitor;
@safe:

import borey.video.gammaramp;
import borey.video.videomode;
import borey.util.vector;
import std.range;

/**
*   Interface to native monitor. Used to setup windows in fullscreen
*   mode.
*/
interface IMonitor
{
    /**
    *   Returns human readable monitor name.
    */
    string name() const @property;

    /**
    *   Returns physical size of the monitor.
    */
    vector2du size() const @property;

    /**
    *   Returns screen position, in screen coordinates, of the upper-left corner of the specified monitor.
    */
    vector2di position() const @property;

    /**
    *   Returns current gamma ramp of the monitor.
    *   Can throw BoreyException if internal error occured.
    */
    GammaRamp gammaRamp() const @property;

    /**
    *   Sets gamma ramp ot the monitor.
    *   Notes: Gamma ramp sizes other than 256 are not supported by all hardware.
    */
    void gammaRamp(GammaRamp ramp) @property;

    /**
    *   Generates a 256-element gamma ramp from the specified exponent and then sets gammaRamp with it.
    */
    void setGamma(float exponent) @property;

    /**
    *   This function returns the current video mode of the specified monitor. 
    *   If you are using a full screen window, the return value will therefore depend on whether it is focused.
    */
    VideoMode videoMode() const @property;

    /**
    *   Returns a range of available video modes for this monitor.
    */
    InputRange!VideoMode videoModes() const @property;
}