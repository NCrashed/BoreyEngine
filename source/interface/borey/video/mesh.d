// Copyright (—Å) 2013 Gushcha Anton <ncrashed@gmail.com>
/*
* This file is part of Borey Engine.
*
* Boost Software License - Version 1.0 - August 17th, 2003
* 
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (the "Software") to use, reproduce, display, distribute,
* execute, and transmit the Software, and to prepare derivative works of the
* Software, and to permit third-parties to whom the Software is furnished to
* do so, all subject to the following:
* 
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/
// This file is written in D programming language
module borey.video.mesh;
@safe:

import borey.video.buffer;

/**
*   Describes mesh - a part of model with shared material. Incapsulates
*   vertex, indexes buffers.
*/
interface IMesh
{
    /**
    *   Returns mesh name used for accessing mesh in IModel.
    */
    string name() @property;

    /**
    *   Returns vertex buffer storing 3d vertices of the mesh.
    */
    IVertexBuffer3D vertexBuffer() @property;

    /**
    *   Returns vertex buffer storing normal for each vertex from
    *   vertex buffer.
    */
    IVertexBuffer3D normalBuffer() @property;

    /**
    *   Returns vertex buffer storing texture coordinates for each
    *   vertex from vertex buffer.
    */
    IVertexBuffer2D uvBuffer() @property;

    /**
    *   Returns index buffer storing triangle vertex indecies from
    *   vertex buffer.
    */
    IIndexBuffer indexBuffer() @property;
}