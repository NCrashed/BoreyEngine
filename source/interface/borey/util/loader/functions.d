// Copyright (—Å) 2013 Gushcha Anton <ncrashed@gmail.com>
/*
* This file is part of Borey Engine.
*
* Boost Software License - Version 1.0 - August 17th, 2003
* 
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (the "Software") to use, reproduce, display, distribute,
* execute, and transmit the Software, and to prepare derivative works of the
* Software, and to permit third-parties to whom the Software is furnished to
* do so, all subject to the following:
* 
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/
// This file is written in D programming language
/**
*   Module describes functions, which exported from engine implementation.
*/
module borey.util.loader.functions;
@safe:

import borey.core;

version(BOREY_DYNAMIC_LOADING)
{
    nothrow extern(C)
    {
        /**
        *   Initializes implementation shared library. Usually only setups
        *   proxy for garbage collector.
        *
        *   Returns:
        *       Library garbage collector, which application can use as proxy.
        */
        alias void* function() da_boreyEngineInitialize;

        /**
        *   Shut downs implementation shared library. Usually only clears
        *   proxy for garbage collector.
        */
        alias void function() da_boreyEngineTerminate;

        /**
        *   Main function imported from implementation lib. Creates
        *   engine core and returns it as interface.
        */
        alias IBoreyCore function() da_createBoreyCore;
    }

    __gshared
    {
        da_boreyEngineInitialize boreyEngineInitialize;
        da_boreyEngineTerminate boreyEngineTerminate;
        da_createBoreyCore createBoreyCore;
    }
}
else
{   
    extern(C)
    {
        /**
        *   Initializes implementation shared library. Usually only setups
        *   proxy for garbage collector.
        *
        *   Warning: For static linking with implementation library you should'not
        *   use gc proxy, it is reduntant.
        *
        *   Returns:
        *       Library garbage collector, which application can use as proxy.
        */ 
        extern void* boreyEngineInitialize();

        /**
        *   Shut downs implementation shared library. Usually only clears
        *   proxy for garbage collector.
        *
        *   Warning: For static linking with implementation library you should'not
        *   use gc proxy, it is reduntant.
        */
        extern void  boreyEngineTerminate();

        /**
        *   Main function imported from implementation lib. Creates
        *   engine core and returns it as interface.
        */
        extern IBoreyCore createBoreyCore(); 
    }
}